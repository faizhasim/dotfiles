{ config, pkgs, lib, inputs, ... }: {
  imports = [
    inputs.nix4nvchad.homeManagerModule
  ];
  programs.nvchad = {
    enable = false;
    chadrcConfig = ''
    -- This file needs to have same structure as nvconfig.lua
    -- https://github.com/NvChad/ui/blob/v3.0/lua/nvconfig.lua
    -- Please read that file to know all available options :(

    ---@type ChadrcConfig
    local M = {}

    M.base46 = {
    	theme = "nord",

    	hl_override = {
    		Comment = { italic = true },
    		["@comment"] = { italic = true },
    	},
    }

    M.nvdash = {
      load_on_startup = true,
      header = {
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢠⣤⣆⣠⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣏⢿⣿⣶⣥⣂⠄⠀⠀⠀⠀⠀⠀⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣼⣿⣿⣶⡹⣿⣿⣿⣷⣮⣐⠀⣀⣀⡀⣤⡁⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡐⣼⣿⣿⣿⣿⣇⣿⣿⣿⣿⣿⣿⢷⣬⡻⠇⣿⣿⣦⠐⠌⢀⣀⣭⣤⣤⣤⣭⣀⣀⡒⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡻⣿⣦⣿⣿⠏⣰⣾⣿⡍⣽⠹⢿⡟⣻⡿⡟⣻⣷⣆⠡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⢱⣿⣿⣿⣿⢧⣿⡿⣛⣛⡻⢿⣿⣿⣿⣿⣿⣟⢻⣿⠀⣿⣿⣿⣷⣿⣾⣶⣧⣾⣷⣧⣾⣿⡿⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⢁⡄⢸⣿⢿⣿⣿⡜⡟⣼⣿⣿⠿⠂⠙⢛⡛⣿⣿⣿⡜⣿⡀⢿⣿⣿⣿⡏⣺⡛⡛⠋⣻⣿⣿⣿⠃⠌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠂⣿⣦⡻⢸⣿⡘⢿⣿⣿⡇⠛⠉⠀⠀⢀⣴⡿⢃⣛⣛⡻⢿⣮⣻⣦⣉⠛⠻⠿⣿⣿⡿⠿⠿⠛⢋⡁⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠢⢰⣿⡿⣷⣾⣿⣿⣿⣿⣏⢴⣶⣶⡶⠾⣛⣥⣾⣿⣿⣿⣿⡶⠙⢿⣿⣿⣿⣿⡆⢸⣿⠃⢴⣿⣿⣿⣿⡌⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢂⡇⣼⣿⣷⢹⣿⣿⣿⣿⣿⣿⣷⡶⢠⣶⣿⣿⠿⠿⣿⣿⡿⣩⣶⠛⠀⠈⢻⣿⡟⢁⡾⢋⣴⣦⢻⣿⣿⣿⣿⡌⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⣼⡇⣿⣿⣿⢸⣿⡿⣿⣿⣿⣿⠟⠀⢸⣿⢏⡴⠚⠳⣎⢻⡇⣿⡇⠀⠀⠀⢈⣿⣦⣤⣴⣿⣿⣿⣧⢻⣿⠏⡈⣿⡰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠠⢿⣧⢸⣿⣿⣷⣾⣿⣬⣿⠟⠁⠀⠀⢸⡏⣾⠀⠀⠀⣻⢸⣷⡙⠷⠀⣀⣤⣤⣶⠀⠀⠀⠀⠀⠉⢻⡆⠏⣰⣧⢸⡇⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⣌⡈⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⢸⣷⠹⣦⣀⣴⢏⣾⣿⣥⣶⣿⣿⣿⣿⣧⣀⠀⠀⠀⢀⠀⣾⣧⣼⣿⣿⣇⢷⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣆⢻⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⣼⣿⣷⣬⣭⣴⣿⡿⠛⠉⢦⣙⠿⣿⣿⣿⣿⣿⣿⡿⢋⣼⣿⣿⣿⣿⣿⣿⡎⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠸⣿⣿⣿⣿⣿⡿⣋⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣷⣦⣀⡀⢉⣡⢂⣶⣮⣭⣷⡶⠾⠿⠿⠿⠿⢿⣿⣿⣿⣿⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠸⡇⢿⣿⣿⣿⣿⢱⣿⣷⢠⣤⢰⣾⡿⣿⠃⢻⣿⣿⣿⣿⣿⣿⣿⣯⣭⡠⣿⣿⣿⠿⣛⡀⣙⣛⣛⣛⣭⢸⣿⣿⣿⡟⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡈⣮⣼⣿⣿⣿⣿⢸⣿⣿⢸⣿⢸⣿⡇⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢩⣛⣓⠃⣗⡂⣿⣿⣿⣿⣿⢸⣿⣿⣿⢇⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠸⣿⣿⣿⣿⣿⢸⣿⣿⢸⣿⠸⣿⡇⢻⣇⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢠⣭⣝⣠⡩⠅⢻⣿⣿⣿⡏⣼⣿⣿⡟⡌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠹⣿⣿⣿⣿⢸⣿⣿⢸⣿⡆⢿⣿⣌⢿⣦⡙⢿⣿⣿⣿⣿⣿⣿⣿⡿⣘⡿⣿⣿⣿⣿⣬⣭⣿⣯⣥⣿⣿⡟⡐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠹⣿⣿⣿⠸⣿⣿⣌⠛⣫⣌⠻⣿⣷⣍⢛⣂⣉⣭⣭⣭⣭⠻⢋⣄⠻⣿⡎⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⡐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠈⢿⣿⣷⣶⣦⡄⢼⣿⣿⣷⣬⣭⣭⣭⣭⣭⣭⣭⠻⣿⡆⣿⣿⠀⣿⣷⣶⣶⣶⢹⣿⣿⣿⡿⢋⠌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠢⡙⢿⣿⣿⣧⣸⣛⠛⣛⠛⠛⠛⠛⠛⣛⡛⣛⠂⣿⣧⣴⣶⢀⡻⠿⠿⣛⣫⣾⣿⡿⢋⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⢙⠻⣿⣿⣿⠀⣿⠀⣿⣿⣿⠀⣿⡇⣿⡇⣙⡛⣋⠁⣾⡇⣿⣿⣿⣿⠿⢋⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠂⢉⠛⠀⣿⠀⣿⣿⣿⠀⣿⡇⣿⡇⣿⡇⣿⡆⣿⣇⠻⠟⡋⠅⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠂⠠⠉⣙⡛⠀⠛⠃⠻⠇⠛⢃⣛⠁⠭⠐⠂⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      },
    }

    M.ui = {
      cmd = {
        icons_left = true,
        style = "flat_dark",
      },

      tabufline = {
        lazyload = false,
      },
    }

    return M
    '';
    extraPlugins = ''
    return {
      {
        "github/copilot.vim",
        enabled = true,
        lazy = false,
      },
      {
        "kdheepak/lazygit.nvim",
        lazy = true,
        cmd = {
          "LazyGit",
          "LazyGitConfig",
          "LazyGitCurrentFile",
          "LazyGitFilter",
          "LazyGitFilterCurrentFile",
        },
        -- optional for floating window border decoration
        dependencies = {
          "nvim-telescope/telescope.nvim",
          "nvim-lua/plenary.nvim",
        },
        -- setting the keybinding for LazyGit with 'keys' is recommended in
        -- order to load the plugin when the command is run for the first time
        keys = {
          { "<leader>lg", "<cmd>LazyGit<cr>", desc = "LazyGit" }
        },
        config = function()
          require("telescope").load_extension("lazygit")
        end,
      },
    }
    '';
    backup = false;
  };
}
